{
  "_comment": "All template variables are enumerated here; and most variables have a default value defined in a variables.json for each kubernetes minor version",
  "variables": {
    "additional_yum_repos": null,
    "ami_component_description": null,
    "ami_description": null,
    "ami_name": null,
    "ami_regions": null,
    "ami_users": null,
    "arch": null,
    "associate_public_ip_address": null,
    "aws_access_key_id": null,
    "aws_region": null,
    "aws_secret_access_key": null,
    "aws_session_token": null,
    "binary_bucket_name": null,
    "binary_bucket_region": null,
    "cache_container_images": null,
    "cni_plugin_version": null,
    "containerd_version": null,
    "creator": null,
    "docker_version": null,
    "enable_fips": null,
    "encrypted": null,
    "iam_instance_profile": null,
    "instance_type": null,
    "kernel_version": null,
    "kms_key_id": null,
    "kubernetes_build_date": null,
    "kubernetes_version": null,
    "launch_block_device_mappings_volume_size": null,
    "pause_container_version": null,
    "pull_cni_from_github": null,
    "remote_folder": null,
    "runc_version": null,
    "security_group_id": null,
    "source_ami_filter_name": null,
    "source_ami_id": null,
    "source_ami_owners": null,
    "ssh_interface": null,
    "ssh_username": null,
    "ssm_agent_version": null,
    "subnet_id": null,
    "temporary_security_group_source_cidrs": null,
    "user_data_file": null,
    "volume_type": null,
    "working_dir": null
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `source_ami_id`}}",
      "ami_users": "{{user `ami_users`}}",
      "snapshot_users": "{{user `ami_users`}}",
      "source_ami_filter": {
        "filters": {
          "name": "{{user `source_ami_filter_name`}}",
          "architecture": "{{user `arch`}}",
          "root-device-type": "ebs",
          "state": "available",
          "virtualization-type": "hvm"
        },
        "owners": [
          "{{user `source_ami_owners`}}"
        ],
        "most_recent": true
      },
      "instance_type": "{{user `instance_type`}}",
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "volume_type": "{{user `volume_type`}}",
          "volume_size": "{{user `launch_block_device_mappings_volume_size`}}",
          "delete_on_termination": true
        }
      ],
      "ami_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "volume_type": "{{user `volume_type`}}",
          "volume_size": 20,
          "delete_on_termination": true
        }
      ],
      "aws_polling": {
        "delay_seconds": 30,
        "max_attempts": 90
      },
      "ami_regions": "{{user `ami_regions`}}",
      "iam_instance_profile": "{{user `iam_instance_profile`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_interface": "{{user `ssh_interface`}}",
      "temporary_security_group_source_cidrs": "{{user `temporary_security_group_source_cidrs`}}",
      "security_group_id": "{{user `security_group_id`}}",
      "associate_public_ip_address": "{{user `associate_public_ip_address`}}",
      "ssh_pty": true,
      "encrypt_boot": "{{user `encrypted`}}",
      "kms_key_id": "{{user `kms_key_id`}}",
      "run_tags": {
        "creator": "{{user `creator`}}"
      },
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Name": "{{user `ami_name`}}",
        "created": "{{timestamp}}",
        "build_region": "{{ .BuildRegion }}",
        "source_ami_id": "{{ .SourceAMI }}",
        "source_ami_name": "{{ .SourceAMIName }}",
        "docker_version": "{{ user `docker_version`}}",
        "containerd_version": "{{ user `containerd_version`}}",
        "kubernetes": "{{ user `kubernetes_version`}}/{{ user `kubernetes_build_date` }}/bin/linux/{{ user `arch` }}",
        "cni_plugin_version": "{{ user `cni_plugin_version`}}",
        "ssm_agent_version": "{{ user `ssm_agent_version`}}"
      },
      "ami_name": "{{user `ami_name`}}",
      "ami_description": "{{ user `ami_description` }}, {{ user `ami_component_description` }}",
      "metadata_options": {
        "http_tokens": "required"
      },
      "user_data_file": "{{user `user_data_file`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "mkdir -p {{user `working_dir`}}",
        "mkdir -p {{user `working_dir`}}/log-collector-script"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/install-additional-repos.sh",
      "environment_vars": [
        "ADDITIONAL_YUM_REPOS={{user `additional_yum_repos`}}"
      ]
    },
    {
      "type": "file",
      "source": "{{template_dir}}/../shared/runtime/",
      "destination": "{{user `working_dir`}}"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/runtime/",
      "destination": "{{user `working_dir`}}"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/../../log-collector-script/linux/",
      "destination": "{{user `working_dir`}}/log-collector-script/"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "sudo chmod -R a+x {{user `working_dir`}}/bin/",
        "sudo mv {{user `working_dir`}}/bin/* /usr/bin/"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/upgrade-kernel.sh",
      "environment_vars": [
        "KUBERNETES_VERSION={{user `kubernetes_version`}}",
        "KERNEL_VERSION={{user `kernel_version`}}"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/enable-fips.sh",
      "environment_vars": [
        "ENABLE_FIPS={{user `enable_fips`}}"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": ["sudo reboot"],
      "expect_disconnect": true,
      "pause_after": "90s"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/install-worker.sh",
      "environment_vars": [
        "AWS_ACCESS_KEY_ID={{user `aws_access_key_id`}}",
        "AWS_SECRET_ACCESS_KEY={{user `aws_secret_access_key`}}",
        "AWS_SESSION_TOKEN={{user `aws_session_token`}}",
        "BINARY_BUCKET_NAME={{user `binary_bucket_name`}}",
        "BINARY_BUCKET_REGION={{user `binary_bucket_region`}}",
        "CACHE_CONTAINER_IMAGES={{user `cache_container_images`}}",
        "CNI_PLUGIN_VERSION={{user `cni_plugin_version`}}",
        "CONTAINERD_VERSION={{user `containerd_version`}}",
        "DOCKER_VERSION={{user `docker_version`}}",
        "KUBERNETES_BUILD_DATE={{user `kubernetes_build_date`}}",
        "KUBERNETES_VERSION={{user `kubernetes_version`}}",
        "PAUSE_CONTAINER_VERSION={{user `pause_container_version`}}",
        "PULL_CNI_FROM_GITHUB={{user `pull_cni_from_github`}}",
        "RUNC_VERSION={{user `runc_version`}}",
        "SSM_AGENT_VERSION={{user `ssm_agent_version`}}",
        "WORKING_DIR={{user `working_dir`}}"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/../shared/provisioners/cleanup.sh"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/cleanup-additional-repos.sh",
      "environment_vars": [
        "ADDITIONAL_YUM_REPOS={{user `additional_yum_repos`}}"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/validate.sh",
      "environment_vars": [
        "KERNEL_VERSION={{user `kernel_version`}}"
      ]
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/../shared/provisioners/generate-version-info.sh",
      "execute_command": "chmod +x {{ .Path }}; {{ .Path }} {{user `working_dir`}}/version-info.json",
      "environment_vars": [
        "CACHE_CONTAINER_IMAGES={{user `cache_container_images`}}"
      ]
    },
    {
      "type": "file",
      "direction": "download",
      "source": "{{user `working_dir`}}/version-info.json",
      "destination": "{{ user `ami_name` }}-version-info.json"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "rm -rf {{user `working_dir`}}"
      ]
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "custom_data": {
        "source_ami_name": "{{ build `SourceAMIName` }}",
        "source_ami_id": "{{ build `SourceAMI` }}"
      }
    },
    {
      "type": "manifest",
      "output": "{{user `ami_name`}}-manifest.json",
      "strip_path": true,
      "custom_data": {
        "source_ami_name": "{{ build `SourceAMIName` }}",
        "source_ami_id": "{{ build `SourceAMI` }}"
      }
    }
  ]
}
