name: '[CI] Integration test / kubetest2'
inputs:
  build_id:
    required: true
    type: string
  ami_id:
    required: true
    type: string
  os_distro:
    required: true
    type: string
  k8s_version:
    required: true
    type: string
  aws_region:
    required: true
    type: string
  log_bucket:
    required: true
    type: string
  deploy_arguments:
    required: false
    type: string
  test_arguments:
    required: false
    type: string
runs:
  using: "composite"
  steps:
    - id: kubetest2
      shell: bash
      run: |
        export PATH=${PATH}:$(go env GOPATH)/bin
        # old versions of packages are sometimes cached by the proxy, just disable it
        GOPROXY=direct
        go install sigs.k8s.io/kubetest2/...@latest
        go install github.com/aws/aws-k8s-tester/...@HEAD

        case "${{ inputs.os_distro }}" in
          al2)
            DEPLOYER_ARGS="--user-data-format=bootstrap.sh"
            ;;
          al2023)
            DEPLOYER_ARGS="--user-data-format=nodeadm"
            ;;
          *)
            echo >&2 "unknown os_distro: ${{ inputs.os_distro }}"
            exit 1
          ;;
        esac

        if [ ! "${{ inputs.deploy_arguments }}" = "" ]; then
          DEPLOYER_ARGS="${DEPLOYER_ARGS} ${{ inputs.deploy_arguments }}"
        fi

        # run k8s conformance suite if no tests specified
        if [ "${{ inputs.test_arguments }}" = "" ]; then
          TESTER_ARGS="ginkgo --test-package-marker=latest-${{ inputs.k8s_version }}.txt --parallel=6 --focus-regex='\[Conformance\]' --skip-regex='\[Serial\]|\[Disruptive\]|\[Slow\]|Garbage.collector'"
        else
          TESTER_ARGS="${{ inputs.test_arguments }}"
        fi

        set -o xtrace

        kubetest2 eksapi \
          --up \
          --down \
          --emit-metrics \
          --log-bucket=${{ inputs.log_bucket }} \
          --kubernetes-version=${{ inputs.k8s_version }} \
          --unmanaged-nodes \
          --ami=${{ inputs.ami_id }} \
          --region=${{ inputs.aws_region }} \
          ${DEPLOYER_ARGS} \
          --test=multi \
          -- \
          --fail-fast=false \
          -- \
          ${TESTER_ARGS}
