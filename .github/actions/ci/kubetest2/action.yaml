name: '[CI] Integration test / kubetest2'
inputs:
  build_id:
    required: true
    type: string
  ami_id:
    required: true
    type: string
  os_distro:
    required: true
    type: string
  k8s_version:
    required: true
    type: string
  aws_region:
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - id: kubetest2
      shell: bash
      run: |
        export PATH=${PATH}:$(go env GOPATH)/bin
        go install sigs.k8s.io/kubetest2/...@latest
        go install github.com/aws/aws-k8s-tester/kubetest2/...@latest

        case "${{ inputs.os_distro }}" in
          al2)
            KUBETEST2_ARGS="--user-data-format=bootstrap.sh"
            ;;
          al2023)
            KUBETEST2_ARGS="--addons=vpc-cni:latest --tune-vpc-cni --user-data-format=nodeadm"
            ;;
          *)
            echo >&2 "unknown os_distro: ${{ inputs.os_distro }}"
            exit 1
          ;;
        esac

        TESTER_NAME=ginkgo
        # k8s_version below 1.26 use the older ginkgo tester
        if [ "${{ inputs.k8s_version }}" = "$(echo -e "${{ inputs.k8s_version }}\n1.26" | sort -V | head -n1)" ]; then
          TESTER_NAME=ginkgo-v1
        fi

        set -o xtrace

        kubetest2 eksapi \
          --up \
          --down \
          --kubernetes-version=${{ inputs.k8s_version }} \
          --generate-ssh-key \
          --unmanaged-nodes \
          --ami=${{ inputs.ami_id }} \
          --region=${{ inputs.aws_region }} \
          $KUBETEST2_ARGS \
          --test=$TESTER_NAME \
          -- \
          --test-package-marker=latest-${{ inputs.k8s_version }}.txt \
          --parallel=6 \
          --focus-regex='\[Conformance\]' \
          --skip-regex='\[Serial\]|\[Disruptive\]|\[Slow\]|Garbage.collector'
